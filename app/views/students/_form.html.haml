= form_for student, url: student_path(student), id: 'student_form' do |f|
  .row
    .large-field
      = f.label :avatar
      = f.file_field :avatar, accept: 'image/*'

  .row
    .field
      = f.label :name, class: 'required'
      = f.text_field :name, required: true

    .field
      = f.label :email, class: 'required'
      = f.email_field :email, required: true, email: true

  .row
    .field
      = f.label :enrollment, class: 'required'
      = f.text_field :enrollment, required: true

    .field
      = f.label :birth_date
      = f.text_field :birth_date, data: { inputmask: "'alias': 'date'" }

  - if student.new_record?
    .row
      .field
        = f.label :password, class: 'required'
        = f.password_field :password, required: true, minlength: 6

      .field
        = f.label :password_confirmation, class: 'required'
        = f.password_field :password_confirmation, required: true, equalto: '#user_password'
  - else
    .row
      .field
        = f.label :password, "Senha <i class='icon-lock'></i>".html_safe
        = f.password_field :password, required: true, minlength: 6, disabled: true, placeholder: '********'

      .field
        = f.label :password_confirmation, "Confirmação da senha <i class='icon-lock'></i>".html_safe
        = f.password_field :password_confirmation, required: true, equalto: '#user_password', disabled: true, placeholder: '********'

  .divider

  .row
    .field
      = f.label :cellphone_number
      = f.text_field :cellphone_number, data: { inputmask: "'alias': 'phone'" }

    .field
      = f.label :phone_number
      = f.text_field :phone_number, data: { inputmask: "'alias': 'phone'" }

  .row
    .field
      = f.label :address
      = f.text_field :address

    .small-field
      = f.label :address_number
      = f.text_field :address_number, data: { inputmask: "'alias': 'integer', 'rightAlignNumerics': false"}

    .small-field
      = f.label :address_complement
      = f.text_field :address_complement

  .row
    .field
      = f.label :address_state
      = f.select :address_state, @states, include_blank: t('helpers.select.prompt')

    .field
      = f.label :address_city
      = f.select :address_city, @cities, include_blank: t('helpers.select.prompt')

  .clear
  %button.button.primary{ type: 'submit', name: 'commit' }
    <i class='icon-ok'></i> Confirmar

= content_for :javascript do
  :javascript
    $(document).ready(function() {
      $('.new-box form').validate();

      $('#user_address_state').change(function(){
        $.ajax({
          type: 'GET',
          url: '/get_cities_by_uf/'+$(this).val(),
          success: function(data) {
            element = $('#user_address_city');
            element.html('');
            element.append("<option value='' alt=''>Selecione</option>")
            for (var i = 0; i < data.length; i++) {
              element.append("<option value='" + data[i].name + "' alt='" + removeAccent(data[i].name) + "'>" + data[i].name + "</option>");
            }
          }
        });
      });

      $('#user_avatar').fileupload();

      $('#user_address_state').select2();
      $('#user_address_city').select2({
        matcher: function(term, text, opt) {
          return text.toUpperCase().indexOf(term.toUpperCase())>=0
            || opt.attr('alt').toUpperCase().indexOf(term.toUpperCase())>=0;
        }
      });

      $('form').on('click', '.icon-lock', function() {
        unlock();
      });

      $('form').on('click', '.icon-unlock', function() {
        lock();
      });

      function lock(icon) {
        $('.icon-unlock').removeClass('icon-unlock').addClass('icon-lock');

        $('#user_password').val('').prop('disabled', true);
        $('#user_password_confirmation').val('').prop('disabled', true);
      }

      function unlock(icon) {
        $('.icon-lock').removeClass('icon-lock').addClass('icon-unlock');

        $('#user_password').prop('disabled', false);
        $('#user_password_confirmation').prop('disabled', false);
      }
    });
